function x = _gauss_(A, b)
    % Метод Гаусса с частичным выбором главного элемента для решения СЛАУ Ax = b
    % Входные параметры:
    %   A - матрица коэффициентов (n x n)
    %   b - вектор правых частей (n x 1) или матрица (m x n)
    % Выходные параметры:
    %   x - решение системы (m x n)
    
    % Проверка размеров матриц
    [n, m] = size(A);
    [nb, mb] = size(b);

    if n ~= m
        error('Матрица A должна быть квадратной');
    end

    if mb ~= n
        error('Количество столбцов в b должно совпадать с размером A');
    end

    % Проверка на вырожденность
    if abs(det(A)) < 1e-12
        warning('Матрица близка к вырожденной. Решение может быть неточным.');
    end

    % Создаем расширенную матрицу
    aug = [A, b'];
    n = size(aug, 1);

    % Прямой ход с частичным выбором главного элемента
    for i = 1:n-1
        % Поиск ведущего элемента в столбце i
        [~, max_row] = max(abs(aug(i:n, i)));
        max_row = max_row + i - 1;

        % Перестановка строк для частичного выбора главного элемента
        if max_row ~= i
            aug([i max_row], :) = aug([max_row i], :);
        end

        % Проверка на ноль на диагонали после перестановки
        if abs(aug(i, i)) < 1e-12
            error('Система вырождена или плохо обусловлена');
        end

        % Исключение переменных
        for j = i+1:n
            factor = aug(j, i) / aug(i, i);
            aug(j, i:end) = aug(j, i:end) - factor * aug(i, i:end);
        end
    end

    % Обратный ход
    x = zeros(nb, n);
    for i = n:-1:1
        % Проверка на ноль на диагонали
        if abs(aug(i, i)) < 1e-12
            error('Система вырождена или плохо обусловлена');
        end
        
        % Вычисление решения для каждой правой части
        for vec_idx = 1:nb
            x(vec_idx, i) = (aug(i, n+vec_idx) - aug(i, i+1:n) * x(vec_idx, i+1:n)') / aug(i, i);
        end
    end
end
